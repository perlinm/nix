##################################################
[[language]]
name = "python"
language-servers = ["ruff", "pylsp"]

[language-server.ruff]
command = "ruff"
args = ["server"]

[language-server.ruff.config.settings.lint]
extendSelect = ["I"]

[language-server.pylsp.config.pylsp.plugins]
flake8 = { enabled = false }
mccabe = { enabled = false }
pycodestyle = { enabled = false }
pyflakes = { enabled = false }

##################################################
[[language]]
name = "nix"
formatter = { command = "nixfmt" }

##################################################
[[language]]
name = "latex"
language-servers = ["texlab", "simple-completion-language-server"]
formatter = { command = "tex-fmt", args = ["--stdin", "--nowrap"] }

[language-server.simple-completion-language-server]
command = "simple-completion-language-server"

[language-server.simple-completion-language-server.config]
max_completion_items = 5     # set max completion results length
feature_words = true         # enable completion by word
feature_snippets = true      # enable snippets
snippets_first = true        # completions will return before snippets by default
feature_unicode_input = true # enable "unicode input"

# write logs to /tmp/completion.log
[language-server.simple-completion-language-server.environment]
RUST_LOG = "info,simple-completion-language-server=info"
LOG_FILE = "/tmp/scls-completion.log"

##################################################
[[language]]
name = "bibtex"

[language.formatter]
command = "bibtex-tidy"
args = [
  "--blank-lines",
  "--sort",
  "--trailing-commas",
  "--strip-enclosing-braces",
]

##################################################
[[language]]
name = "toml"
formatter = { command = "taplo", args = ["fmt", "-"] }

##################################################
[[language]]
name = "julia"
scope = "source.julia"
injection-regex = "julia"
file-types = ["jl"]
roots = ["Project.toml", "Manifest.toml", "JuliaProject.toml"]
comment-token = "#"
language-servers = ["julia-lsp"]
indent = { tab-width = 4, unit = "    " }

[language-server.julia-lsp]
command = "julia"
timeout = 60
args = ["-e", "using LanguageServer; runserver();"]
